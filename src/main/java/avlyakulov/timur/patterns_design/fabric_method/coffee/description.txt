Здесь мы уже создадим несколько заведений, каждый из которых будет иметь свой особенный стиль
Будут 2 кофейни: итальянская и американская.
Изменения затронут не только интерьер, но и напитки:
в итальянской кофейне мы будем использовать исключительно итальянские кофейные бренды, с особым помолом и прожаркой.
в американской порции будут чуточку больше, и к каждому заказу будем подавать плавленный зефир — маршмеллоу.
Здесь мы уже отошли от фабрик которых слишком много и перешли на паттерн именуемый фабричный метод где мы уже реализовали через
абстрактные классы фабричный метод.


Какие выводы можно сделать?
Все продукты — реализации абстрактного класса Coffee.
Все создатели — реализации абстрактного класса CoffeeShop.
Мы наблюдаем две параллельные иерархии классов:
Иерархия продуктов. Мы видим итальянских потомков и американских потомков
Иерархия создателей. Мы видим итальянских потомков и американских потомков
У суперкласса CoffeeShop нет информации о том, какая конкретно реализация продукта (Coffee) будет создана.
Суперкласс CoffeeShop делегирует создание конкретного продукта своим потомкам.
Каждый потомок класса CoffeeShop реализует фабричный метод createCoffee() в соответствии со своей спецификой. Иными словами, внутри реализаций классов-создателей принимается решение о приготовлении конкретного продукта, исходя из специфики класса создателя.


Определение:
Паттерн фабричный метод определяет интерфейс создания объекта, но позволяет субклассам выбрать класс создаваемого экземпляра.
Таким образом, Фабричный метод делегирует операцию создания экземпляра субклассам.